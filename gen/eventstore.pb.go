// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: eventstore.proto

package eventstore_v1

import (
	aggregates "aggregates"
	context "context"
	events "events"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Event struct {
	Id                   string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AggregateId          string                   `protobuf:"bytes,2,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	Date                 string                   `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	PublishedDate        string                   `protobuf:"bytes,4,opt,name=published_date,json=publishedDate,proto3" json:"published_date,omitempty"`
	AggregateType        aggregates.AggregateType `protobuf:"varint,5,opt,name=aggregate_type,json=aggregateType,proto3,enum=aggregates_v1.AggregateType" json:"aggregate_type,omitempty"`
	EventType            *events.EventType        `protobuf:"bytes,6,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	Data                 string                   `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_00783576c07562d6, []int{0}
}
func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Event) GetAggregateId() string {
	if m != nil {
		return m.AggregateId
	}
	return ""
}

func (m *Event) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *Event) GetPublishedDate() string {
	if m != nil {
		return m.PublishedDate
	}
	return ""
}

func (m *Event) GetAggregateType() aggregates.AggregateType {
	if m != nil {
		return m.AggregateType
	}
	return aggregates.AggregateType_AGGREGATE_TYPE_INVALID
}

func (m *Event) GetEventType() *events.EventType {
	if m != nil {
		return m.EventType
	}
	return nil
}

func (m *Event) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type StoreEventRequest struct {
	Event                *Event   `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreEventRequest) Reset()         { *m = StoreEventRequest{} }
func (m *StoreEventRequest) String() string { return proto.CompactTextString(m) }
func (*StoreEventRequest) ProtoMessage()    {}
func (*StoreEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00783576c07562d6, []int{1}
}
func (m *StoreEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreEventRequest.Unmarshal(m, b)
}
func (m *StoreEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreEventRequest.Marshal(b, m, deterministic)
}
func (m *StoreEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreEventRequest.Merge(m, src)
}
func (m *StoreEventRequest) XXX_Size() int {
	return xxx_messageInfo_StoreEventRequest.Size(m)
}
func (m *StoreEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StoreEventRequest proto.InternalMessageInfo

func (m *StoreEventRequest) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type StoreEventResponse struct {
	AggregateId          string   `protobuf:"bytes,1,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	EventId              string   `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreEventResponse) Reset()         { *m = StoreEventResponse{} }
func (m *StoreEventResponse) String() string { return proto.CompactTextString(m) }
func (*StoreEventResponse) ProtoMessage()    {}
func (*StoreEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00783576c07562d6, []int{2}
}
func (m *StoreEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreEventResponse.Unmarshal(m, b)
}
func (m *StoreEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreEventResponse.Marshal(b, m, deterministic)
}
func (m *StoreEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreEventResponse.Merge(m, src)
}
func (m *StoreEventResponse) XXX_Size() int {
	return xxx_messageInfo_StoreEventResponse.Size(m)
}
func (m *StoreEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StoreEventResponse proto.InternalMessageInfo

func (m *StoreEventResponse) GetAggregateId() string {
	if m != nil {
		return m.AggregateId
	}
	return ""
}

func (m *StoreEventResponse) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

type QueryEventStoreRequest struct {
	Params               map[string]string `protobuf:"bytes,1,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *QueryEventStoreRequest) Reset()         { *m = QueryEventStoreRequest{} }
func (m *QueryEventStoreRequest) String() string { return proto.CompactTextString(m) }
func (*QueryEventStoreRequest) ProtoMessage()    {}
func (*QueryEventStoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00783576c07562d6, []int{3}
}
func (m *QueryEventStoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryEventStoreRequest.Unmarshal(m, b)
}
func (m *QueryEventStoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryEventStoreRequest.Marshal(b, m, deterministic)
}
func (m *QueryEventStoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryEventStoreRequest.Merge(m, src)
}
func (m *QueryEventStoreRequest) XXX_Size() int {
	return xxx_messageInfo_QueryEventStoreRequest.Size(m)
}
func (m *QueryEventStoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryEventStoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryEventStoreRequest proto.InternalMessageInfo

func (m *QueryEventStoreRequest) GetParams() map[string]string {
	if m != nil {
		return m.Params
	}
	return nil
}

type QueryEventStoreResponse struct {
	Events               []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryEventStoreResponse) Reset()         { *m = QueryEventStoreResponse{} }
func (m *QueryEventStoreResponse) String() string { return proto.CompactTextString(m) }
func (*QueryEventStoreResponse) ProtoMessage()    {}
func (*QueryEventStoreResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00783576c07562d6, []int{4}
}
func (m *QueryEventStoreResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryEventStoreResponse.Unmarshal(m, b)
}
func (m *QueryEventStoreResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryEventStoreResponse.Marshal(b, m, deterministic)
}
func (m *QueryEventStoreResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryEventStoreResponse.Merge(m, src)
}
func (m *QueryEventStoreResponse) XXX_Size() int {
	return xxx_messageInfo_QueryEventStoreResponse.Size(m)
}
func (m *QueryEventStoreResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryEventStoreResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryEventStoreResponse proto.InternalMessageInfo

func (m *QueryEventStoreResponse) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

func init() {
	proto.RegisterType((*Event)(nil), "eventstore_v1.Event")
	proto.RegisterType((*StoreEventRequest)(nil), "eventstore_v1.StoreEventRequest")
	proto.RegisterType((*StoreEventResponse)(nil), "eventstore_v1.StoreEventResponse")
	proto.RegisterType((*QueryEventStoreRequest)(nil), "eventstore_v1.QueryEventStoreRequest")
	proto.RegisterMapType((map[string]string)(nil), "eventstore_v1.QueryEventStoreRequest.ParamsEntry")
	proto.RegisterType((*QueryEventStoreResponse)(nil), "eventstore_v1.QueryEventStoreResponse")
}

func init() { proto.RegisterFile("eventstore.proto", fileDescriptor_00783576c07562d6) }

var fileDescriptor_00783576c07562d6 = []byte{
	// 424 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x4d, 0x6f, 0x94, 0x50,
	0x14, 0xf5, 0x31, 0x65, 0x6a, 0xef, 0x38, 0xa4, 0x7d, 0xa9, 0x8a, 0xc4, 0x05, 0x25, 0xa9, 0x21,
	0xc6, 0x60, 0x86, 0x6e, 0xd4, 0x8d, 0x31, 0xda, 0x98, 0xd9, 0x18, 0x45, 0x17, 0xee, 0xc8, 0x6b,
	0xb8, 0x19, 0x89, 0x2d, 0x20, 0x3c, 0x48, 0x58, 0xfb, 0x3f, 0xfc, 0x19, 0xfe, 0x3e, 0xc3, 0x7d,
	0x8f, 0x8f, 0x94, 0x89, 0xba, 0xbb, 0x1f, 0xe7, 0x1c, 0xce, 0x3d, 0xe4, 0xc1, 0x31, 0x36, 0x98,
	0xc9, 0x4a, 0xe6, 0x25, 0x06, 0x45, 0x99, 0xcb, 0x9c, 0xaf, 0xc7, 0x49, 0xdc, 0x6c, 0x9c, 0xfb,
	0x62, 0xb7, 0x2b, 0x71, 0x27, 0x24, 0x56, 0xcf, 0x6f, 0x44, 0x9a, 0x29, 0x94, 0x73, 0xa2, 0x50,
	0x93, 0x91, 0xf7, 0xd3, 0x00, 0xf3, 0xb2, 0x9b, 0x72, 0x0b, 0x8c, 0x34, 0xb1, 0x99, 0xcb, 0xfc,
	0xa3, 0xc8, 0x48, 0x13, 0x7e, 0x06, 0xf7, 0x06, 0x95, 0x38, 0x4d, 0x6c, 0x83, 0x36, 0xab, 0x61,
	0xb6, 0x4d, 0x38, 0x87, 0x83, 0x44, 0x48, 0xb4, 0x17, 0xb4, 0xa2, 0x9a, 0x9f, 0x83, 0x55, 0xd4,
	0x57, 0xd7, 0x69, 0xf5, 0x0d, 0x93, 0x98, 0xb6, 0x07, 0xb4, 0x5d, 0x0f, 0xd3, 0x77, 0x1d, 0xec,
	0x2d, 0x58, 0xa3, 0xba, 0x6c, 0x0b, 0xb4, 0x4d, 0x97, 0xf9, 0x56, 0xf8, 0x38, 0x18, 0xad, 0xc7,
	0xcd, 0x26, 0x78, 0xd3, 0x77, 0x5f, 0xda, 0x02, 0xa3, 0xb5, 0x98, 0xb6, 0xfc, 0x02, 0x80, 0x2e,
	0x52, 0x02, 0x4b, 0x97, 0xf9, 0xab, 0xf0, 0x34, 0x50, 0x47, 0x76, 0x64, 0x3a, 0x8c, 0x88, 0x47,
	0xd8, 0x97, 0xda, 0xb4, 0xb0, 0x0f, 0x07, 0xd3, 0xc2, 0x7b, 0x0d, 0x27, 0x9f, 0xbb, 0xec, 0x88,
	0x10, 0xe1, 0x8f, 0x1a, 0x2b, 0xc9, 0x9f, 0x82, 0x49, 0x2c, 0xca, 0x64, 0x14, 0xd6, 0x19, 0x2b,
	0xf1, 0x48, 0x41, 0xbc, 0x08, 0xf8, 0x54, 0xa0, 0x2a, 0xf2, 0xac, 0xc2, 0x59, 0x84, 0x6c, 0x1e,
	0xe1, 0x23, 0xb8, 0xab, 0x4e, 0x18, 0x12, 0x3e, 0xa4, 0x7e, 0x9b, 0x78, 0xbf, 0x18, 0x3c, 0xf8,
	0x54, 0x63, 0xd9, 0x92, 0x28, 0xc9, 0xf7, 0xd6, 0xb6, 0xb0, 0x2c, 0x44, 0x29, 0x6e, 0x2a, 0x9b,
	0xb9, 0x0b, 0x7f, 0x15, 0x6e, 0x6e, 0x79, 0xdb, 0x4f, 0x0b, 0x3e, 0x12, 0xe7, 0x32, 0x93, 0x65,
	0x1b, 0x69, 0x01, 0xe7, 0x25, 0xac, 0x26, 0x63, 0x7e, 0x0c, 0x8b, 0xef, 0xd8, 0x6a, 0xa7, 0x5d,
	0xc9, 0x4f, 0xc1, 0x6c, 0xc4, 0x75, 0x8d, 0xda, 0x9e, 0x6a, 0x5e, 0x19, 0x2f, 0x98, 0xf7, 0x1e,
	0x1e, 0xce, 0x3e, 0xa4, 0x2f, 0x7f, 0x06, 0x4b, 0xe5, 0x48, 0x1b, 0xdc, 0x1f, 0x9e, 0xc6, 0x84,
	0xbf, 0x19, 0xc0, 0x28, 0xc2, 0x3f, 0x80, 0xa9, 0x0a, 0xf7, 0x16, 0x6b, 0xf6, 0x8f, 0x9c, 0xb3,
	0xbf, 0x20, 0x94, 0x15, 0xef, 0x0e, 0xff, 0x0a, 0x26, 0xf9, 0xe4, 0xe7, 0xff, 0x15, 0x93, 0xf3,
	0xe4, 0x5f, 0xb0, 0x5e, 0xf9, 0x6a, 0x49, 0x8f, 0xe8, 0xe2, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xa4, 0x10, 0x5c, 0x7e, 0x91, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EventStoreClient is the client API for EventStore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventStoreClient interface {
	Store(ctx context.Context, in *StoreEventRequest, opts ...grpc.CallOption) (*StoreEventResponse, error)
	Query(ctx context.Context, in *QueryEventStoreRequest, opts ...grpc.CallOption) (*QueryEventStoreResponse, error)
}

type eventStoreClient struct {
	cc *grpc.ClientConn
}

func NewEventStoreClient(cc *grpc.ClientConn) EventStoreClient {
	return &eventStoreClient{cc}
}

func (c *eventStoreClient) Store(ctx context.Context, in *StoreEventRequest, opts ...grpc.CallOption) (*StoreEventResponse, error) {
	out := new(StoreEventResponse)
	err := c.cc.Invoke(ctx, "/eventstore_v1.EventStore/Store", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventStoreClient) Query(ctx context.Context, in *QueryEventStoreRequest, opts ...grpc.CallOption) (*QueryEventStoreResponse, error) {
	out := new(QueryEventStoreResponse)
	err := c.cc.Invoke(ctx, "/eventstore_v1.EventStore/Query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventStoreServer is the server API for EventStore service.
type EventStoreServer interface {
	Store(context.Context, *StoreEventRequest) (*StoreEventResponse, error)
	Query(context.Context, *QueryEventStoreRequest) (*QueryEventStoreResponse, error)
}

// UnimplementedEventStoreServer can be embedded to have forward compatible implementations.
type UnimplementedEventStoreServer struct {
}

func (*UnimplementedEventStoreServer) Store(ctx context.Context, req *StoreEventRequest) (*StoreEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Store not implemented")
}
func (*UnimplementedEventStoreServer) Query(ctx context.Context, req *QueryEventStoreRequest) (*QueryEventStoreResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Query not implemented")
}

func RegisterEventStoreServer(s *grpc.Server, srv EventStoreServer) {
	s.RegisterService(&_EventStore_serviceDesc, srv)
}

func _EventStore_Store_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StoreEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventStoreServer).Store(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eventstore_v1.EventStore/Store",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventStoreServer).Store(ctx, req.(*StoreEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventStore_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryEventStoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventStoreServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eventstore_v1.EventStore/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventStoreServer).Query(ctx, req.(*QueryEventStoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EventStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "eventstore_v1.EventStore",
	HandlerType: (*EventStoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Store",
			Handler:    _EventStore_Store_Handler,
		},
		{
			MethodName: "Query",
			Handler:    _EventStore_Query_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "eventstore.proto",
}
